version: '3.8'

services:
  # AI Content Publisher API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DEBUG=true
      - ENVIRONMENT=development
      - SECRET_KEY=dev-secret-key-change-in-production
      - LOG_LEVEL=DEBUG
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ai_content_publisher
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    volumes:
      - ./app:/app/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and task queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=ai_content_publisher
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery worker for background tasks
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.celery worker --loglevel=info
    environment:
      - DEBUG=true
      - ENVIRONMENT=development
      - SECRET_KEY=dev-secret-key-change-in-production
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ai_content_publisher
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    volumes:
      - ./app:/app/app
    restart: unless-stopped

  # Celery beat for scheduled tasks
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.celery beat --loglevel=info
    environment:
      - DEBUG=true
      - ENVIRONMENT=development
      - SECRET_KEY=dev-secret-key-change-in-production
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ai_content_publisher
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    volumes:
      - ./app:/app/app
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
